{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "AllowToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "DisallowToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "addAllowedToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allowedTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "isTokenAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "removeAllowedToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/biffi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.1/contracts/access/Ownable.sol",
    "12": "contracts/interfaces/IAllowTokens.sol",
    "4": "C:/Users/biffi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.1/contracts/utils/Context.sol",
    "8": "contracts/AllowTokens.sol"
  },
  "ast": {
    "absolutePath": "contracts/AllowTokens.sol",
    "exportedSymbols": {
      "AllowTokens": [
        181
      ],
      "Context": [
        2440
      ],
      "IAllowTokens": [
        1298
      ],
      "Ownable": [
        1699
      ]
    },
    "id": 182,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:8"
      },
      {
        "absolutePath": "contracts/interfaces/IAllowTokens.sol",
        "file": "./interfaces/IAllowTokens.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 182,
        "sourceUnit": 1299,
        "src": "57:39:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/biffi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.1/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 182,
        "sourceUnit": 1700,
        "src": "97:52:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "IAllowTokens",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1298,
              "src": "175:12:8"
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "175:12:8"
          },
          {
            "baseName": {
              "id": 6,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1699,
              "src": "189:7:8"
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "189:7:8"
          }
        ],
        "canonicalName": "AllowTokens",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 181,
        "linearizedBaseContracts": [
          181,
          1699,
          2440,
          1298
        ],
        "name": "AllowTokens",
        "nameLocation": "160:11:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "5e5f2e26",
            "id": 10,
            "mutability": "mutable",
            "name": "allowedTokens",
            "nameLocation": "220:13:8",
            "nodeType": "VariableDeclaration",
            "scope": 181,
            "src": "203:30:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 8,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "203:7:8",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 9,
              "nodeType": "ArrayTypeName",
              "src": "203:9:8",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 16,
            "name": "AllowToken",
            "nameLocation": "246:10:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "265:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 16,
                  "src": "257:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "257:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "280:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 16,
                  "src": "272:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "272:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "256:30:8"
            },
            "src": "240:47:8"
          },
          {
            "anonymous": false,
            "id": 22,
            "name": "DisallowToken",
            "nameLocation": "298:13:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "320:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 22,
                  "src": "312:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "312:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "335:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 22,
                  "src": "327:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "327:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "311:30:8"
            },
            "src": "292:50:8"
          },
          {
            "baseFunctions": [
              1285
            ],
            "body": {
              "id": 77,
              "nodeType": "Block",
              "src": "414:358:8",
              "statements": [
                {
                  "assignments": [
                    31
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31,
                      "mutability": "mutable",
                      "name": "exists",
                      "nameLocation": "429:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 77,
                      "src": "424:11:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 30,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "424:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "438:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "424:19:8"
                },
                {
                  "body": {
                    "id": 57,
                    "nodeType": "Block",
                    "src": "504:124:8",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 49,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 45,
                              "name": "allowedTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "522:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 47,
                            "indexExpression": {
                              "id": 46,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35,
                              "src": "536:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "522:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 48,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "542:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "522:25:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 56,
                        "nodeType": "IfStatement",
                        "src": "518:100:8",
                        "trueBody": {
                          "id": 55,
                          "nodeType": "Block",
                          "src": "549:69:8",
                          "statements": [
                            {
                              "expression": {
                                "id": 52,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 50,
                                  "name": "exists",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31,
                                  "src": "567:6:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 51,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "576:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "567:13:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 53,
                              "nodeType": "ExpressionStatement",
                              "src": "567:13:8"
                            },
                            {
                              "id": 54,
                              "nodeType": "Break",
                              "src": "598:5:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 38,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "473:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 39,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "477:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 40,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "477:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "473:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 58,
                  "initializationExpression": {
                    "assignments": [
                      35
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 35,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "466:1:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 58,
                        "src": "458:9:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 34,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "458:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 37,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 36,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "470:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "458:13:8"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 43,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "499:3:8",
                      "subExpression": {
                        "id": 42,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "499:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 44,
                    "nodeType": "ExpressionStatement",
                    "src": "499:3:8"
                  },
                  "nodeType": "ForStatement",
                  "src": "453:175:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "645:7:8",
                        "subExpression": {
                          "id": 60,
                          "name": "exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "646:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520746f6b656e20697320616c726561647920616c6c6f776564",
                        "id": 62,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "654:30:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_08cb4d71e040fc7692ef37526581798dd7d88ede5af8c5c35fd1368130ddd4b7",
                          "typeString": "literal_string \"The token is already allowed\""
                        },
                        "value": "The token is already allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_08cb4d71e040fc7692ef37526581798dd7d88ede5af8c5c35fd1368130ddd4b7",
                          "typeString": "literal_string \"The token is already allowed\""
                        }
                      ],
                      "id": 59,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "637:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "637:48:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "637:48:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 68,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "715:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 65,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "696:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 67,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "696:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "696:25:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70,
                  "nodeType": "ExpressionStatement",
                  "src": "696:25:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 72,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "747:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "747:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "759:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 71,
                      "name": "AllowToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "736:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "736:29:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76,
                  "nodeType": "EmitStatement",
                  "src": "731:34:8"
                }
              ]
            },
            "functionSelector": "4178617f",
            "id": 78,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 28,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 27,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1618,
                  "src": "404:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "404:9:8"
              }
            ],
            "name": "addAllowedToken",
            "nameLocation": "357:15:8",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 26,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "395:8:8"
            },
            "parameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "381:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "373:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "373:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "372:15:8"
            },
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "414:0:8"
            },
            "scope": 181,
            "src": "348:424:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1290
            ],
            "body": {
              "id": 146,
              "nodeType": "Block",
              "src": "847:517:8",
              "statements": [
                {
                  "assignments": [
                    87
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87,
                      "mutability": "mutable",
                      "name": "tokenIndex",
                      "nameLocation": "865:10:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 146,
                      "src": "857:18:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 86,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "857:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 90,
                  "initialValue": {
                    "expression": {
                      "id": 88,
                      "name": "allowedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "878:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "878:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "857:41:8"
                },
                {
                  "body": {
                    "id": 114,
                    "nodeType": "Block",
                    "src": "959:125:8",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 102,
                              "name": "allowedTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "977:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 104,
                            "indexExpression": {
                              "id": 103,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 92,
                              "src": "991:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "977:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 105,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80,
                            "src": "997:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "977:25:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 113,
                        "nodeType": "IfStatement",
                        "src": "973:101:8",
                        "trueBody": {
                          "id": 112,
                          "nodeType": "Block",
                          "src": "1004:70:8",
                          "statements": [
                            {
                              "expression": {
                                "id": 109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 107,
                                  "name": "tokenIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87,
                                  "src": "1022:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 108,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 92,
                                  "src": "1035:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1022:14:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 110,
                              "nodeType": "ExpressionStatement",
                              "src": "1022:14:8"
                            },
                            {
                              "id": 111,
                              "nodeType": "Break",
                              "src": "1054:5:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 95,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92,
                      "src": "928:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 96,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "932:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 97,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "932:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "928:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 115,
                  "initializationExpression": {
                    "assignments": [
                      92
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 92,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "921:1:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 115,
                        "src": "913:9:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 91,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "913:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 94,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 93,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "925:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "913:13:8"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "954:3:8",
                      "subExpression": {
                        "id": 99,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "954:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 101,
                    "nodeType": "ExpressionStatement",
                    "src": "954:3:8"
                  },
                  "nodeType": "ForStatement",
                  "src": "908:176:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 117,
                          "name": "tokenIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87,
                          "src": "1114:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 118,
                            "name": "allowedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "1127:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1127:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1114:33:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520746f6b656e20697320616c726561647920756e616c6c6f776564",
                        "id": 121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1161:32:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a3d7573f4e384c4f26ae7a50729cde305c52b3629f21c13d02b61f076acdec09",
                          "typeString": "literal_string \"The token is already unallowed\""
                        },
                        "value": "The token is already unallowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a3d7573f4e384c4f26ae7a50729cde305c52b3629f21c13d02b61f076acdec09",
                          "typeString": "literal_string \"The token is already unallowed\""
                        }
                      ],
                      "id": 116,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1093:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1093:110:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 123,
                  "nodeType": "ExpressionStatement",
                  "src": "1093:110:8"
                },
                {
                  "expression": {
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 124,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "1214:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 126,
                      "indexExpression": {
                        "id": 125,
                        "name": "tokenIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87,
                        "src": "1228:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1214:25:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 127,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "1242:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 132,
                      "indexExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 128,
                            "name": "allowedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "1256:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1256:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1279:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "1256:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1242:39:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1214:67:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 134,
                  "nodeType": "ExpressionStatement",
                  "src": "1214:67:8"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 135,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "1291:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "pop",
                      "nodeType": "MemberAccess",
                      "src": "1291:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer)"
                      }
                    },
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1291:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "1291:19:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 141,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1339:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1339:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 143,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "1351:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 140,
                      "name": "DisallowToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "1325:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1325:32:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 145,
                  "nodeType": "EmitStatement",
                  "src": "1320:37:8"
                }
              ]
            },
            "functionSelector": "90469a9d",
            "id": 147,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 84,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 83,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1618,
                  "src": "837:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "837:9:8"
              }
            ],
            "name": "removeAllowedToken",
            "nameLocation": "787:18:8",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 82,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "828:8:8"
            },
            "parameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "814:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "806:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "806:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "805:15:8"
            },
            "returnParameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "847:0:8"
            },
            "scope": 181,
            "src": "778:586:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1297
            ],
            "body": {
              "id": 179,
              "nodeType": "Block",
              "src": "1445:188:8",
              "statements": [
                {
                  "body": {
                    "id": 175,
                    "nodeType": "Block",
                    "src": "1506:99:8",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 166,
                              "name": "allowedTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "1524:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 168,
                            "indexExpression": {
                              "id": 167,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 156,
                              "src": "1538:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1524:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 169,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 149,
                            "src": "1544:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1524:25:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 174,
                        "nodeType": "IfStatement",
                        "src": "1520:75:8",
                        "trueBody": {
                          "id": 173,
                          "nodeType": "Block",
                          "src": "1551:44:8",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 171,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1576:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 154,
                              "id": 172,
                              "nodeType": "Return",
                              "src": "1569:11:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 159,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "1475:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 160,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "1479:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1479:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1475:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 176,
                  "initializationExpression": {
                    "assignments": [
                      156
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 156,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1468:1:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 176,
                        "src": "1460:9:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 155,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1460:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 158,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1472:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1460:13:8"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1501:3:8",
                      "subExpression": {
                        "id": 163,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 156,
                        "src": "1501:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 165,
                    "nodeType": "ExpressionStatement",
                    "src": "1501:3:8"
                  },
                  "nodeType": "ForStatement",
                  "src": "1455:150:8"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1621:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 154,
                  "id": 178,
                  "nodeType": "Return",
                  "src": "1614:12:8"
                }
              ]
            },
            "functionSelector": "f9eaee0d",
            "id": 180,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isTokenAllowed",
            "nameLocation": "1379:14:8",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 151,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1421:8:8"
            },
            "parameters": {
              "id": 150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 149,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1402:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 180,
                  "src": "1394:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 148,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1394:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1393:15:8"
            },
            "returnParameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 180,
                  "src": "1439:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 152,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1439:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1438:6:8"
            },
            "scope": 181,
            "src": "1370:263:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 182,
        "src": "151:1484:8",
        "usedErrors": []
      }
    ],
    "src": "32:1604:8"
  },
  "bytecode": "608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6106df8061007e6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100cf57806390469a9d146100e0578063f2fde38b146100f3578063f9eaee0d1461010657600080fd5b80634178617f146100825780635e5f2e2614610097578063715018a6146100c7575b600080fd5b6100956100903660046105ec565b610129565b005b6100aa6100a536600461061c565b610272565b6040516001600160a01b0390911681526020015b60405180910390f35b61009561029c565b6000546001600160a01b03166100aa565b6100956100ee3660046105ec565b6102b0565b6100956101013660046105ec565b61045f565b6101196101143660046105ec565b6104d8565b60405190151581526020016100be565b610131610542565b6000805b60015481101561019257826001600160a01b03166001828154811061015c5761015c610635565b6000918252602090912001546001600160a01b031614156101805760019150610192565b8061018a81610661565b915050610135565b5080156101e65760405162461bcd60e51b815260206004820152601c60248201527f54686520746f6b656e20697320616c726561647920616c6c6f7765640000000060448201526064015b60405180910390fd5b6001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b0384169081179091556040805133815260208101929092527fb255eb80cd9faf1bf370ec9d568e7ddcd76db8329d4665996ac3ff866e93a1a691015b60405180910390a15050565b6001818154811061028257600080fd5b6000918252602090912001546001600160a01b0316905081565b6102a4610542565b6102ae600061059c565b565b6102b8610542565b60015460005b60015481101561031a57826001600160a01b0316600182815481106102e5576102e5610635565b6000918252602090912001546001600160a01b031614156103085780915061031a565b8061031281610661565b9150506102be565b50600154811061036c5760405162461bcd60e51b815260206004820152601e60248201527f54686520746f6b656e20697320616c726561647920756e616c6c6f776564000060448201526064016101dd565b6001805461037b90829061067c565b8154811061038b5761038b610635565b600091825260209091200154600180546001600160a01b0390921691839081106103b7576103b7610635565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060018054806103f6576103f6610693565b600082815260209020810160001990810180546001600160a01b03191690550190556040517f564b89698f7ed468cc4fd744742e329fddd973ba260c976968aeb4acfe78b7339061026690339085906001600160a01b0392831681529116602082015260400190565b610467610542565b6001600160a01b0381166104cc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101dd565b6104d58161059c565b50565b6000805b60015481101561053957826001600160a01b03166001828154811061050357610503610635565b6000918252602090912001546001600160a01b031614156105275750600192915050565b8061053181610661565b9150506104dc565b50600092915050565b6000546001600160a01b031633146102ae5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156105fe57600080fd5b81356001600160a01b038116811461061557600080fd5b9392505050565b60006020828403121561062e57600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156106755761067561064b565b5060010190565b60008282101561068e5761068e61064b565b500390565b634e487b7160e01b600052603160045260246000fdfea26469706673582212203970b60033f1e8725d2c75bdb3e6459989ae201a78a2b127be8c51f725cfbb7964736f6c634300080c0033",
  "bytecodeSha1": "7868ecaba1edb1780305ae096c663443842d7b70",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "AllowTokens",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable._checkOwner": {
          "30": [
            1422,
            1445,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "29": [
            2169,
            2191,
            true
          ]
        }
      },
      "12": {},
      "4": {},
      "8": {
        "AllowTokens.addAllowedToken": {
          "24": [
            522,
            547,
            false
          ],
          "25": [
            645,
            652,
            true
          ]
        },
        "AllowTokens.isTokenAllowed": {
          "28": [
            1524,
            1549,
            false
          ]
        },
        "AllowTokens.removeAllowedToken": {
          "26": [
            977,
            1002,
            false
          ],
          "27": [
            1114,
            1147,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._checkOwner": {
          "21": [
            1414,
            1482
          ]
        },
        "Ownable._transferOwnership": {
          "22": [
            2541,
            2558
          ],
          "23": [
            2568,
            2613
          ]
        },
        "Ownable.owner": {
          "0": [
            1266,
            1279
          ]
        },
        "Ownable.renounceOwnership": {
          "7": [
            1895,
            1925
          ]
        },
        "Ownable.transferOwnership": {
          "15": [
            2161,
            2234
          ],
          "16": [
            2244,
            2272
          ]
        }
      },
      "12": {},
      "4": {
        "Context._msgSender": {
          "20": [
            712,
            729
          ]
        }
      },
      "8": {
        "AllowTokens.addAllowedToken": {
          "1": [
            567,
            580
          ],
          "2": [
            598,
            603
          ],
          "3": [
            499,
            502
          ],
          "4": [
            637,
            685
          ],
          "5": [
            696,
            721
          ],
          "6": [
            731,
            765
          ]
        },
        "AllowTokens.isTokenAllowed": {
          "17": [
            1569,
            1580
          ],
          "18": [
            1501,
            1504
          ],
          "19": [
            1614,
            1626
          ]
        },
        "AllowTokens.removeAllowedToken": {
          "8": [
            1022,
            1036
          ],
          "9": [
            1054,
            1059
          ],
          "10": [
            954,
            957
          ],
          "11": [
            1093,
            1203
          ],
          "12": [
            1214,
            1281
          ],
          "13": [
            1291,
            1310
          ],
          "14": [
            1320,
            1357
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.7.1/Context",
    "IAllowTokens",
    "OpenZeppelin/openzeppelin-contracts@4.7.1/Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100cf57806390469a9d146100e0578063f2fde38b146100f3578063f9eaee0d1461010657600080fd5b80634178617f146100825780635e5f2e2614610097578063715018a6146100c7575b600080fd5b6100956100903660046105ec565b610129565b005b6100aa6100a536600461061c565b610272565b6040516001600160a01b0390911681526020015b60405180910390f35b61009561029c565b6000546001600160a01b03166100aa565b6100956100ee3660046105ec565b6102b0565b6100956101013660046105ec565b61045f565b6101196101143660046105ec565b6104d8565b60405190151581526020016100be565b610131610542565b6000805b60015481101561019257826001600160a01b03166001828154811061015c5761015c610635565b6000918252602090912001546001600160a01b031614156101805760019150610192565b8061018a81610661565b915050610135565b5080156101e65760405162461bcd60e51b815260206004820152601c60248201527f54686520746f6b656e20697320616c726561647920616c6c6f7765640000000060448201526064015b60405180910390fd5b6001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b0384169081179091556040805133815260208101929092527fb255eb80cd9faf1bf370ec9d568e7ddcd76db8329d4665996ac3ff866e93a1a691015b60405180910390a15050565b6001818154811061028257600080fd5b6000918252602090912001546001600160a01b0316905081565b6102a4610542565b6102ae600061059c565b565b6102b8610542565b60015460005b60015481101561031a57826001600160a01b0316600182815481106102e5576102e5610635565b6000918252602090912001546001600160a01b031614156103085780915061031a565b8061031281610661565b9150506102be565b50600154811061036c5760405162461bcd60e51b815260206004820152601e60248201527f54686520746f6b656e20697320616c726561647920756e616c6c6f776564000060448201526064016101dd565b6001805461037b90829061067c565b8154811061038b5761038b610635565b600091825260209091200154600180546001600160a01b0390921691839081106103b7576103b7610635565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060018054806103f6576103f6610693565b600082815260209020810160001990810180546001600160a01b03191690550190556040517f564b89698f7ed468cc4fd744742e329fddd973ba260c976968aeb4acfe78b7339061026690339085906001600160a01b0392831681529116602082015260400190565b610467610542565b6001600160a01b0381166104cc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101dd565b6104d58161059c565b50565b6000805b60015481101561053957826001600160a01b03166001828154811061050357610503610635565b6000918252602090912001546001600160a01b031614156105275750600192915050565b8061053181610661565b9150506104dc565b50600092915050565b6000546001600160a01b031633146102ae5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156105fe57600080fd5b81356001600160a01b038116811461061557600080fd5b9392505050565b60006020828403121561062e57600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156106755761067561064b565b5060010190565b60008282101561068e5761068e61064b565b500390565b634e487b7160e01b600052603160045260246000fdfea26469706673582212203970b60033f1e8725d2c75bdb3e6459989ae201a78a2b127be8c51f725cfbb7964736f6c634300080c0033",
  "deployedSourceMap": "151:1484:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;348:424;;;;;;:::i;:::-;;:::i;:::-;;203:30;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;654:32:17;;;636:51;;624:2;609:18;203:30:8;;;;;;;;1831:101:0;;;:::i;1201:85::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;778:586:8;;;;;;:::i;:::-;;:::i;2081:198:0:-;;;;;;:::i;:::-;;:::i;1370:263:8:-;;;;;;:::i;:::-;;:::i;:::-;;;863:14:17;;856:22;838:41;;826:2;811:18;1370:263:8;698:187:17;348:424:8;1094:13:0;:11;:13::i;:::-;424:11:8::1;458:9:::0;453:175:::1;477:13;:20:::0;473:24;::::1;453:175;;;542:5;-1:-1:-1::0;;;;;522:25:8::1;:13;536:1;522:16;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;522:16:8::1;:25;518:100;;;576:4;567:13;;598:5;;518:100;499:3:::0;::::1;::::0;::::1;:::i;:::-;;;;453:175;;;;646:6;645:7;637:48;;;::::0;-1:-1:-1;;;637:48:8;;1496:2:17;637:48:8::1;::::0;::::1;1478:21:17::0;1535:2;1515:18;;;1508:30;1574;1554:18;;;1547:58;1622:18;;637:48:8::1;;;;;;;;;696:13;:25:::0;;;;::::1;::::0;;-1:-1:-1;696:25:8;;;;;::::1;::::0;;-1:-1:-1;;;;;;696:25:8::1;-1:-1:-1::0;;;;;696:25:8;::::1;::::0;;::::1;::::0;;;736:29:::1;::::0;;747:10:::1;1863:34:17::0;;1928:2;1913:18;;1906:43;;;;736:29:8::1;::::0;1798:18:17;736:29:8::1;;;;;;;;414:358;348:424:::0;:::o;203:30::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;203:30:8;;-1:-1:-1;203:30:8;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;778:586:8:-;1094:13:0;:11;:13::i;:::-;878::8::1;:20:::0;857:18:::1;908:176;932:13;:20:::0;928:24;::::1;908:176;;;997:5;-1:-1:-1::0;;;;;977:25:8::1;:13;991:1;977:16;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;977:16:8::1;:25;973:101;;;1035:1;1022:14;;1054:5;;973:101;954:3:::0;::::1;::::0;::::1;:::i;:::-;;;;908:176;;;-1:-1:-1::0;1127:13:8::1;:20:::0;1114:33;::::1;1093:110;;;::::0;-1:-1:-1;;;1093:110:8;;2162:2:17;1093:110:8::1;::::0;::::1;2144:21:17::0;2201:2;2181:18;;;2174:30;2240:32;2220:18;;;2213:60;2290:18;;1093:110:8::1;1960:354:17::0;1093:110:8::1;1242:13;1256:20:::0;;:24:::1;::::0;1242:13;;1256:24:::1;:::i;:::-;1242:39;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;1214:25;;-1:-1:-1;;;;;1242:39:8;;::::1;::::0;1228:10;;1214:25;::::1;;;;;:::i;:::-;;;;;;;;;:67;;;;;-1:-1:-1::0;;;;;1214:67:8::1;;;;;-1:-1:-1::0;;;;;1214:67:8::1;;;;;;1291:13;:19;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;-1:-1:-1;;1291:19:8;;;;;-1:-1:-1;;;;;;1291:19:8::1;::::0;;;;;1325:32:::1;::::0;::::1;::::0;::::1;::::0;1339:10:::1;::::0;1351:5;;-1:-1:-1;;;;;1881:15:17;;;1863:34;;1933:15;;1928:2;1913:18;;1906:43;1813:2;1798:18;;1651:304;2081:198:0;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;2783:2:17;2161:73:0::1;::::0;::::1;2765:21:17::0;2822:2;2802:18;;;2795:30;2861:34;2841:18;;;2834:62;-1:-1:-1;;;2912:18:17;;;2905:36;2958:19;;2161:73:0::1;2581:402:17::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1370:263:8:-;1439:4;;1455:150;1479:13;:20;1475:24;;1455:150;;;1544:5;-1:-1:-1;;;;;1524:25:8;:13;1538:1;1524:16;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;1524:16:8;:25;1520:75;;;-1:-1:-1;1576:4:8;;1370:263;-1:-1:-1;;1370:263:8:o;1520:75::-;1501:3;;;;:::i;:::-;;;;1455:150;;;-1:-1:-1;1621:5:8;;1370:263;-1:-1:-1;;1370:263:8:o;1359:130:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:4;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;3190:2:17;1414:68:0;;;3172:21:17;;;3209:18;;;3202:30;3268:34;3248:18;;;3241:62;3320:18;;1414:68:0;2988:356:17;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:286:17:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:17;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:17:o;305:180::-;364:6;417:2;405:9;396:7;392:23;388:32;385:52;;;433:1;430;423:12;385:52;-1:-1:-1;456:23:17;;305:180;-1:-1:-1;305:180:17:o;890:127::-;951:10;946:3;942:20;939:1;932:31;982:4;979:1;972:15;1006:4;1003:1;996:15;1022:127;1083:10;1078:3;1074:20;1071:1;1064:31;1114:4;1111:1;1104:15;1138:4;1135:1;1128:15;1154:135;1193:3;-1:-1:-1;;1214:17:17;;1211:43;;;1234:18;;:::i;:::-;-1:-1:-1;1281:1:17;1270:13;;1154:135::o;2319:125::-;2359:4;2387:1;2384;2381:8;2378:34;;;2392:18;;:::i;:::-;-1:-1:-1;2429:9:17;;2319:125::o;2449:127::-;2510:10;2505:3;2501:20;2498:1;2491:31;2541:4;2538:1;2531:15;2565:4;2562:1;2555:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    151,
    1635
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x90469A9D EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0xF9EAEE0D EQ PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4178617F EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x5E5F2E26 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EC JUMP JUMPDEST PUSH2 0x129 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAA PUSH2 0xA5 CALLDATASIZE PUSH1 0x4 PUSH2 0x61C JUMP JUMPDEST PUSH2 0x272 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0x29C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xAA JUMP JUMPDEST PUSH2 0x95 PUSH2 0xEE CALLDATASIZE PUSH1 0x4 PUSH2 0x5EC JUMP JUMPDEST PUSH2 0x2B0 JUMP JUMPDEST PUSH2 0x95 PUSH2 0x101 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EC JUMP JUMPDEST PUSH2 0x45F JUMP JUMPDEST PUSH2 0x119 PUSH2 0x114 CALLDATASIZE PUSH1 0x4 PUSH2 0x5EC JUMP JUMPDEST PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBE JUMP JUMPDEST PUSH2 0x131 PUSH2 0x542 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x192 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x15C JUMPI PUSH2 0x15C PUSH2 0x635 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x180 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x192 JUMP JUMPDEST DUP1 PUSH2 0x18A DUP2 PUSH2 0x661 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x135 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520746F6B656E20697320616C726561647920616C6C6F77656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0xB255EB80CD9FAF1BF370EC9D568E7DDCD76DB8329D4665996AC3FF866E93A1A6 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x2A4 PUSH2 0x542 JUMP JUMPDEST PUSH2 0x2AE PUSH1 0x0 PUSH2 0x59C JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x542 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x31A JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2E5 JUMPI PUSH2 0x2E5 PUSH2 0x635 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x308 JUMPI DUP1 SWAP2 POP PUSH2 0x31A JUMP JUMPDEST DUP1 PUSH2 0x312 DUP2 PUSH2 0x661 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2BE JUMP JUMPDEST POP PUSH1 0x1 SLOAD DUP2 LT PUSH2 0x36C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520746F6B656E20697320616C726561647920756E616C6C6F7765640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1DD JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x37B SWAP1 DUP3 SWAP1 PUSH2 0x67C JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x38B JUMPI PUSH2 0x38B PUSH2 0x635 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x3B7 JUMPI PUSH2 0x3B7 PUSH2 0x635 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP1 SLOAD DUP1 PUSH2 0x3F6 JUMPI PUSH2 0x3F6 PUSH2 0x693 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x564B89698F7ED468CC4FD744742E329FDDD973BA260C976968AEB4ACFE78B733 SWAP1 PUSH2 0x266 SWAP1 CALLER SWAP1 DUP6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH2 0x467 PUSH2 0x542 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1DD JUMP JUMPDEST PUSH2 0x4D5 DUP2 PUSH2 0x59C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x539 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x503 JUMPI PUSH2 0x503 PUSH2 0x635 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x527 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x531 DUP2 PUSH2 0x661 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4DC JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1DD JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x615 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x62E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x675 JUMPI PUSH2 0x675 PUSH2 0x64B JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x68E JUMPI PUSH2 0x68E PUSH2 0x64B JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY PUSH17 0xB60033F1E8725D2C75BDB3E6459989AE20 BYTE PUSH25 0xA2B127BE8C51F725CFBB7964736F6C634300080C0033000000 ",
  "pcMap": {
    "0": {
      "offset": [
        151,
        1635
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "6": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "8": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "12": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "DUP1",
      "path": "8"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "REVERT",
      "path": "8"
    },
    "16": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "17": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "POP",
      "path": "8"
    },
    "18": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "21": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "LT",
      "path": "8"
    },
    "22": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7D"
    },
    "25": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "26": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "29": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "SHR",
      "path": "8"
    },
    "32": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "DUP1",
      "path": "8"
    },
    "33": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x8DA5CB5B"
    },
    "38": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "GT",
      "path": "8"
    },
    "39": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5B"
    },
    "42": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "43": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "DUP1",
      "path": "8"
    },
    "44": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x8DA5CB5B"
    },
    "49": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "EQ",
      "path": "8"
    },
    "50": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xCF"
    },
    "53": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "54": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "DUP1",
      "path": "8"
    },
    "55": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x90469A9D"
    },
    "60": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "EQ",
      "path": "8"
    },
    "61": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xE0"
    },
    "64": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "65": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "DUP1",
      "path": "8"
    },
    "66": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xF2FDE38B"
    },
    "71": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "EQ",
      "path": "8"
    },
    "72": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xF3"
    },
    "75": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "76": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "DUP1",
      "path": "8"
    },
    "77": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xF9EAEE0D"
    },
    "82": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "EQ",
      "path": "8"
    },
    "83": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x106"
    },
    "86": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "87": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "89": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "DUP1",
      "path": "8"
    },
    "90": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "REVERT",
      "path": "8"
    },
    "91": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "92": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "DUP1",
      "path": "8"
    },
    "93": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x4178617F"
    },
    "98": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "EQ",
      "path": "8"
    },
    "99": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x82"
    },
    "102": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "103": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "DUP1",
      "path": "8"
    },
    "104": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x5E5F2E26"
    },
    "109": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "EQ",
      "path": "8"
    },
    "110": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x97"
    },
    "113": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "114": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "DUP1",
      "path": "8"
    },
    "115": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x715018A6"
    },
    "120": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "EQ",
      "path": "8"
    },
    "121": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC7"
    },
    "124": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "125": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "126": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "128": {
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "DUP1",
      "path": "8"
    },
    "129": {
      "first_revert": true,
      "fn": null,
      "offset": [
        151,
        1635
      ],
      "op": "REVERT",
      "path": "8"
    },
    "130": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        348,
        772
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "131": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        348,
        772
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x95"
    },
    "134": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        348,
        772
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x90"
    },
    "137": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        348,
        772
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "138": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        348,
        772
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "140": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        348,
        772
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5EC"
    },
    "143": {
      "fn": "AllowTokens.addAllowedToken",
      "jump": "i",
      "offset": [
        348,
        772
      ],
      "op": "JUMP",
      "path": "8"
    },
    "144": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        348,
        772
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "145": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        348,
        772
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x129"
    },
    "148": {
      "fn": "AllowTokens.addAllowedToken",
      "jump": "i",
      "offset": [
        348,
        772
      ],
      "op": "JUMP",
      "path": "8"
    },
    "149": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        348,
        772
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "150": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        348,
        772
      ],
      "op": "STOP",
      "path": "8"
    },
    "151": {
      "offset": [
        203,
        233
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "152": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        203,
        233
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xAA"
    },
    "155": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        203,
        233
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA5"
    },
    "158": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        203,
        233
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "159": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        203,
        233
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "161": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        203,
        233
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x61C"
    },
    "164": {
      "fn": "AllowTokens.addAllowedToken",
      "jump": "i",
      "offset": [
        203,
        233
      ],
      "op": "JUMP",
      "path": "8"
    },
    "165": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        203,
        233
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "166": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        203,
        233
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x272"
    },
    "169": {
      "fn": "AllowTokens.addAllowedToken",
      "jump": "i",
      "offset": [
        203,
        233
      ],
      "op": "JUMP",
      "path": "8"
    },
    "170": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        203,
        233
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "171": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        203,
        233
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "173": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        203,
        233
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "178": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "180": {
      "op": "SHL"
    },
    "181": {
      "op": "SUB"
    },
    "182": {
      "op": "SWAP1"
    },
    "183": {
      "op": "SWAP2"
    },
    "184": {
      "op": "AND"
    },
    "185": {
      "op": "DUP2"
    },
    "186": {
      "op": "MSTORE"
    },
    "187": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "189": {
      "op": "ADD"
    },
    "190": {
      "offset": [
        203,
        233
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "191": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        203,
        233
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "193": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        203,
        233
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "194": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        203,
        233
      ],
      "op": "DUP1",
      "path": "8"
    },
    "195": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        203,
        233
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "196": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        203,
        233
      ],
      "op": "SUB",
      "path": "8"
    },
    "197": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        203,
        233
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "198": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        203,
        233
      ],
      "op": "RETURN",
      "path": "8"
    },
    "199": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "200": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95"
    },
    "203": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29C"
    },
    "206": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "207": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "208": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "210": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "215": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "217": {
      "op": "SHL"
    },
    "218": {
      "op": "SUB"
    },
    "219": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "220": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAA"
    },
    "223": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMP",
      "path": "0"
    },
    "224": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        778,
        1364
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "225": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        778,
        1364
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x95"
    },
    "228": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        778,
        1364
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xEE"
    },
    "231": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        778,
        1364
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "232": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        778,
        1364
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "234": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        778,
        1364
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5EC"
    },
    "237": {
      "fn": "AllowTokens.removeAllowedToken",
      "jump": "i",
      "offset": [
        778,
        1364
      ],
      "op": "JUMP",
      "path": "8"
    },
    "238": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        778,
        1364
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "239": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        778,
        1364
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2B0"
    },
    "242": {
      "fn": "AllowTokens.removeAllowedToken",
      "jump": "i",
      "offset": [
        778,
        1364
      ],
      "op": "JUMP",
      "path": "8"
    },
    "243": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "244": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95"
    },
    "247": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x101"
    },
    "250": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "251": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "253": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5EC"
    },
    "256": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "257": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "258": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x45F"
    },
    "261": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "262": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1370,
        1633
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "263": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1370,
        1633
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x119"
    },
    "266": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1370,
        1633
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x114"
    },
    "269": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1370,
        1633
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "270": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1370,
        1633
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "272": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1370,
        1633
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5EC"
    },
    "275": {
      "fn": "AllowTokens.isTokenAllowed",
      "jump": "i",
      "offset": [
        1370,
        1633
      ],
      "op": "JUMP",
      "path": "8"
    },
    "276": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1370,
        1633
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "277": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1370,
        1633
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4D8"
    },
    "280": {
      "fn": "AllowTokens.isTokenAllowed",
      "jump": "i",
      "offset": [
        1370,
        1633
      ],
      "op": "JUMP",
      "path": "8"
    },
    "281": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1370,
        1633
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "282": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1370,
        1633
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "284": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1370,
        1633
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "285": {
      "op": "SWAP1"
    },
    "286": {
      "op": "ISZERO"
    },
    "287": {
      "op": "ISZERO"
    },
    "288": {
      "op": "DUP2"
    },
    "289": {
      "op": "MSTORE"
    },
    "290": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "292": {
      "op": "ADD"
    },
    "293": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1370,
        1633
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xBE"
    },
    "296": {
      "op": "JUMP"
    },
    "297": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        348,
        772
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "298": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x131"
    },
    "301": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x542"
    },
    "304": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "305": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "306": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        424,
        435
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "308": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        458,
        467
      ],
      "op": "DUP1",
      "path": "8"
    },
    "309": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        453,
        628
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "310": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        477,
        490
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "312": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        477,
        497
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "313": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        473,
        497
      ],
      "op": "DUP2",
      "path": "8"
    },
    "314": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        473,
        497
      ],
      "op": "LT",
      "path": "8"
    },
    "315": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        453,
        628
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "316": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        453,
        628
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x192"
    },
    "319": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        453,
        628
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "320": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        542,
        547
      ],
      "op": "DUP3",
      "path": "8"
    },
    "321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "325": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "327": {
      "op": "SHL"
    },
    "328": {
      "op": "SUB"
    },
    "329": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        522,
        547
      ],
      "op": "AND",
      "path": "8"
    },
    "330": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        522,
        535
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "332": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        536,
        537
      ],
      "op": "DUP3",
      "path": "8"
    },
    "333": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        522,
        538
      ],
      "op": "DUP2",
      "path": "8"
    },
    "334": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        522,
        538
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "335": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        522,
        538
      ],
      "op": "DUP2",
      "path": "8"
    },
    "336": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        522,
        538
      ],
      "op": "LT",
      "path": "8"
    },
    "337": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        522,
        538
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x15C"
    },
    "340": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        522,
        538
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "341": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        522,
        538
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x15C"
    },
    "344": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        522,
        538
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x635"
    },
    "347": {
      "fn": "AllowTokens.addAllowedToken",
      "jump": "i",
      "offset": [
        522,
        538
      ],
      "op": "JUMP",
      "path": "8"
    },
    "348": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        522,
        538
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "349": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        522,
        538
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "351": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        522,
        538
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "352": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        522,
        538
      ],
      "op": "DUP3",
      "path": "8"
    },
    "353": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        522,
        538
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "354": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        522,
        538
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "356": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        522,
        538
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "357": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        522,
        538
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "358": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        522,
        538
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "359": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        522,
        538
      ],
      "op": "ADD",
      "path": "8"
    },
    "360": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        522,
        538
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "365": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "367": {
      "op": "SHL"
    },
    "368": {
      "op": "SUB"
    },
    "369": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        522,
        538
      ],
      "op": "AND",
      "path": "8"
    },
    "370": {
      "branch": 24,
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        522,
        547
      ],
      "op": "EQ",
      "path": "8"
    },
    "371": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        518,
        618
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "372": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        518,
        618
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x180"
    },
    "375": {
      "branch": 24,
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        518,
        618
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "376": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        576,
        580
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 1,
      "value": "0x1"
    },
    "378": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        567,
        580
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "379": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        567,
        580
      ],
      "op": "POP",
      "path": "8"
    },
    "380": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        598,
        603
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 2,
      "value": "0x192"
    },
    "383": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        598,
        603
      ],
      "op": "JUMP",
      "path": "8"
    },
    "384": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        518,
        618
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "385": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        499,
        502
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 3
    },
    "386": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        499,
        502
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x18A"
    },
    "389": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        499,
        502
      ],
      "op": "DUP2",
      "path": "8"
    },
    "390": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        499,
        502
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x661"
    },
    "393": {
      "fn": "AllowTokens.addAllowedToken",
      "jump": "i",
      "offset": [
        499,
        502
      ],
      "op": "JUMP",
      "path": "8"
    },
    "394": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        499,
        502
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "395": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        499,
        502
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "396": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        499,
        502
      ],
      "op": "POP",
      "path": "8"
    },
    "397": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        499,
        502
      ],
      "op": "POP",
      "path": "8"
    },
    "398": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        453,
        628
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x135"
    },
    "401": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        453,
        628
      ],
      "op": "JUMP",
      "path": "8"
    },
    "402": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        453,
        628
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "403": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        453,
        628
      ],
      "op": "POP",
      "path": "8"
    },
    "404": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        646,
        652
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 4
    },
    "405": {
      "branch": 25,
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        645,
        652
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "406": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        637,
        685
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1E6"
    },
    "409": {
      "branch": 25,
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        637,
        685
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "410": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        637,
        685
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "412": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        637,
        685
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "413": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "417": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "419": {
      "op": "SHL"
    },
    "420": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        637,
        685
      ],
      "op": "DUP2",
      "path": "8"
    },
    "421": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        637,
        685
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "422": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "424": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        637,
        685
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "426": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        637,
        685
      ],
      "op": "DUP3",
      "path": "8"
    },
    "427": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        637,
        685
      ],
      "op": "ADD",
      "path": "8"
    },
    "428": {
      "op": "MSTORE"
    },
    "429": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "431": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "433": {
      "op": "DUP3"
    },
    "434": {
      "op": "ADD"
    },
    "435": {
      "op": "MSTORE"
    },
    "436": {
      "op": "PUSH32",
      "value": "0x54686520746F6B656E20697320616C726561647920616C6C6F77656400000000"
    },
    "469": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "471": {
      "op": "DUP3"
    },
    "472": {
      "op": "ADD"
    },
    "473": {
      "op": "MSTORE"
    },
    "474": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "476": {
      "op": "ADD"
    },
    "477": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        637,
        685
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "478": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        637,
        685
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "480": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        637,
        685
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "481": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        637,
        685
      ],
      "op": "DUP1",
      "path": "8"
    },
    "482": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        637,
        685
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "483": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        637,
        685
      ],
      "op": "SUB",
      "path": "8"
    },
    "484": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        637,
        685
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "485": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        637,
        685
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "8"
    },
    "486": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        637,
        685
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "487": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        696,
        709
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 5,
      "value": "0x1"
    },
    "489": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        696,
        721
      ],
      "op": "DUP1",
      "path": "8"
    },
    "490": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        696,
        721
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "491": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        696,
        721
      ],
      "op": "DUP1",
      "path": "8"
    },
    "492": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        696,
        721
      ],
      "op": "DUP3",
      "path": "8"
    },
    "493": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        696,
        721
      ],
      "op": "ADD",
      "path": "8"
    },
    "494": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        696,
        721
      ],
      "op": "DUP3",
      "path": "8"
    },
    "495": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        696,
        721
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "496": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "498": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        696,
        721
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "499": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        696,
        721
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "500": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        696,
        721
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "501": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        696,
        721
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "502": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        696,
        721
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6"
    },
    "535": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        696,
        721
      ],
      "op": "ADD",
      "path": "8"
    },
    "536": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        696,
        721
      ],
      "op": "DUP1",
      "path": "8"
    },
    "537": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        696,
        721
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "542": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "544": {
      "op": "SHL"
    },
    "545": {
      "op": "SUB"
    },
    "546": {
      "op": "NOT"
    },
    "547": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        696,
        721
      ],
      "op": "AND",
      "path": "8"
    },
    "548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "552": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "554": {
      "op": "SHL"
    },
    "555": {
      "op": "SUB"
    },
    "556": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        696,
        721
      ],
      "op": "DUP5",
      "path": "8"
    },
    "557": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        696,
        721
      ],
      "op": "AND",
      "path": "8"
    },
    "558": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        696,
        721
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "559": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        696,
        721
      ],
      "op": "DUP2",
      "path": "8"
    },
    "560": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        696,
        721
      ],
      "op": "OR",
      "path": "8"
    },
    "561": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        696,
        721
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "562": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        696,
        721
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "563": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        696,
        721
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "564": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        736,
        765
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 6,
      "value": "0x40"
    },
    "566": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        736,
        765
      ],
      "op": "DUP1",
      "path": "8"
    },
    "567": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        736,
        765
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "568": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        747,
        757
      ],
      "op": "CALLER",
      "path": "8"
    },
    "569": {
      "op": "DUP2"
    },
    "570": {
      "op": "MSTORE"
    },
    "571": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "573": {
      "op": "DUP2"
    },
    "574": {
      "op": "ADD"
    },
    "575": {
      "op": "SWAP3"
    },
    "576": {
      "op": "SWAP1"
    },
    "577": {
      "op": "SWAP3"
    },
    "578": {
      "op": "MSTORE"
    },
    "579": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        736,
        765
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0xB255EB80CD9FAF1BF370EC9D568E7DDCD76DB8329D4665996AC3FF866E93A1A6"
    },
    "612": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        736,
        765
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "613": {
      "op": "ADD"
    },
    "614": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        736,
        765
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "615": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        736,
        765
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "617": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        736,
        765
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "618": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        736,
        765
      ],
      "op": "DUP1",
      "path": "8"
    },
    "619": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        736,
        765
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "620": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        736,
        765
      ],
      "op": "SUB",
      "path": "8"
    },
    "621": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        736,
        765
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "622": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        736,
        765
      ],
      "op": "LOG1",
      "path": "8"
    },
    "623": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        414,
        772
      ],
      "op": "POP",
      "path": "8"
    },
    "624": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        348,
        772
      ],
      "op": "POP",
      "path": "8"
    },
    "625": {
      "fn": "AllowTokens.addAllowedToken",
      "jump": "o",
      "offset": [
        348,
        772
      ],
      "op": "JUMP",
      "path": "8"
    },
    "626": {
      "offset": [
        203,
        233
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "627": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        203,
        233
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "629": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        203,
        233
      ],
      "op": "DUP2",
      "path": "8"
    },
    "630": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        203,
        233
      ],
      "op": "DUP2",
      "path": "8"
    },
    "631": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        203,
        233
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "632": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        203,
        233
      ],
      "op": "DUP2",
      "path": "8"
    },
    "633": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        203,
        233
      ],
      "op": "LT",
      "path": "8"
    },
    "634": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        203,
        233
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x282"
    },
    "637": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        203,
        233
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "638": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        203,
        233
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "640": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        203,
        233
      ],
      "op": "DUP1",
      "path": "8"
    },
    "641": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        203,
        233
      ],
      "op": "REVERT",
      "path": "8"
    },
    "642": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        203,
        233
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "643": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        203,
        233
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "645": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        203,
        233
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "646": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        203,
        233
      ],
      "op": "DUP3",
      "path": "8"
    },
    "647": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        203,
        233
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "648": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        203,
        233
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "650": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        203,
        233
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "651": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        203,
        233
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "652": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        203,
        233
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "653": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        203,
        233
      ],
      "op": "ADD",
      "path": "8"
    },
    "654": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        203,
        233
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "659": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "661": {
      "op": "SHL"
    },
    "662": {
      "op": "SUB"
    },
    "663": {
      "offset": [
        203,
        233
      ],
      "op": "AND",
      "path": "8"
    },
    "664": {
      "fn": "AllowTokens.addAllowedToken",
      "offset": [
        203,
        233
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "665": {
      "op": "POP"
    },
    "666": {
      "offset": [
        203,
        233
      ],
      "op": "DUP2",
      "path": "8"
    },
    "667": {
      "fn": "AllowTokens.addAllowedToken",
      "jump": "o",
      "offset": [
        203,
        233
      ],
      "op": "JUMP",
      "path": "8"
    },
    "668": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "669": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A4"
    },
    "672": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x542"
    },
    "675": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "676": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "677": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 7,
      "value": "0x2AE"
    },
    "680": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1922,
        1923
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "682": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1913
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x59C"
    },
    "685": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMP",
      "path": "0"
    },
    "686": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "687": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "688": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        778,
        1364
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "689": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B8"
    },
    "692": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x542"
    },
    "695": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "696": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "697": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        878,
        891
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "699": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        878,
        898
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "700": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        857,
        875
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "702": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        908,
        1084
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "703": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        932,
        945
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "705": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        932,
        952
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "706": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        928,
        952
      ],
      "op": "DUP2",
      "path": "8"
    },
    "707": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        928,
        952
      ],
      "op": "LT",
      "path": "8"
    },
    "708": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        908,
        1084
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "709": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        908,
        1084
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x31A"
    },
    "712": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        908,
        1084
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "713": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        997,
        1002
      ],
      "op": "DUP3",
      "path": "8"
    },
    "714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "718": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "720": {
      "op": "SHL"
    },
    "721": {
      "op": "SUB"
    },
    "722": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        977,
        1002
      ],
      "op": "AND",
      "path": "8"
    },
    "723": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        977,
        990
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "725": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        991,
        992
      ],
      "op": "DUP3",
      "path": "8"
    },
    "726": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        977,
        993
      ],
      "op": "DUP2",
      "path": "8"
    },
    "727": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        977,
        993
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "728": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        977,
        993
      ],
      "op": "DUP2",
      "path": "8"
    },
    "729": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        977,
        993
      ],
      "op": "LT",
      "path": "8"
    },
    "730": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        977,
        993
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2E5"
    },
    "733": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        977,
        993
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "734": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        977,
        993
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2E5"
    },
    "737": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        977,
        993
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x635"
    },
    "740": {
      "fn": "AllowTokens.removeAllowedToken",
      "jump": "i",
      "offset": [
        977,
        993
      ],
      "op": "JUMP",
      "path": "8"
    },
    "741": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        977,
        993
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "742": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        977,
        993
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "744": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        977,
        993
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "745": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        977,
        993
      ],
      "op": "DUP3",
      "path": "8"
    },
    "746": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        977,
        993
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "747": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        977,
        993
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "749": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        977,
        993
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "750": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        977,
        993
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "751": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        977,
        993
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "752": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        977,
        993
      ],
      "op": "ADD",
      "path": "8"
    },
    "753": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        977,
        993
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "758": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "760": {
      "op": "SHL"
    },
    "761": {
      "op": "SUB"
    },
    "762": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        977,
        993
      ],
      "op": "AND",
      "path": "8"
    },
    "763": {
      "branch": 26,
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        977,
        1002
      ],
      "op": "EQ",
      "path": "8"
    },
    "764": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        973,
        1074
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "765": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        973,
        1074
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x308"
    },
    "768": {
      "branch": 26,
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        973,
        1074
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "769": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1035,
        1036
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 8
    },
    "770": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1022,
        1036
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "771": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1022,
        1036
      ],
      "op": "POP",
      "path": "8"
    },
    "772": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1054,
        1059
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 9,
      "value": "0x31A"
    },
    "775": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1054,
        1059
      ],
      "op": "JUMP",
      "path": "8"
    },
    "776": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        973,
        1074
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "777": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        954,
        957
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 10
    },
    "778": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        954,
        957
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x312"
    },
    "781": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        954,
        957
      ],
      "op": "DUP2",
      "path": "8"
    },
    "782": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        954,
        957
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x661"
    },
    "785": {
      "fn": "AllowTokens.removeAllowedToken",
      "jump": "i",
      "offset": [
        954,
        957
      ],
      "op": "JUMP",
      "path": "8"
    },
    "786": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        954,
        957
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "787": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        954,
        957
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "788": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        954,
        957
      ],
      "op": "POP",
      "path": "8"
    },
    "789": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        954,
        957
      ],
      "op": "POP",
      "path": "8"
    },
    "790": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        908,
        1084
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2BE"
    },
    "793": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        908,
        1084
      ],
      "op": "JUMP",
      "path": "8"
    },
    "794": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        908,
        1084
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "795": {
      "op": "POP"
    },
    "796": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1127,
        1140
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 11,
      "value": "0x1"
    },
    "798": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1127,
        1147
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "799": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1114,
        1147
      ],
      "op": "DUP2",
      "path": "8"
    },
    "800": {
      "branch": 27,
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1114,
        1147
      ],
      "op": "LT",
      "path": "8"
    },
    "801": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1093,
        1203
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x36C"
    },
    "804": {
      "branch": 27,
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1093,
        1203
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "805": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1093,
        1203
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "807": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1093,
        1203
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "808": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "812": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "814": {
      "op": "SHL"
    },
    "815": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1093,
        1203
      ],
      "op": "DUP2",
      "path": "8"
    },
    "816": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1093,
        1203
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "817": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "819": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1093,
        1203
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "821": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1093,
        1203
      ],
      "op": "DUP3",
      "path": "8"
    },
    "822": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1093,
        1203
      ],
      "op": "ADD",
      "path": "8"
    },
    "823": {
      "op": "MSTORE"
    },
    "824": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "826": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "828": {
      "op": "DUP3"
    },
    "829": {
      "op": "ADD"
    },
    "830": {
      "op": "MSTORE"
    },
    "831": {
      "op": "PUSH32",
      "value": "0x54686520746F6B656E20697320616C726561647920756E616C6C6F7765640000"
    },
    "864": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "866": {
      "op": "DUP3"
    },
    "867": {
      "op": "ADD"
    },
    "868": {
      "op": "MSTORE"
    },
    "869": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "871": {
      "op": "ADD"
    },
    "872": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1093,
        1203
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1DD"
    },
    "875": {
      "op": "JUMP"
    },
    "876": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1093,
        1203
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "877": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1242,
        1255
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 12,
      "value": "0x1"
    },
    "879": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1256,
        1276
      ],
      "op": "DUP1",
      "path": "8"
    },
    "880": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1256,
        1276
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "881": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1256,
        1280
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x37B"
    },
    "884": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1256,
        1280
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "885": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1242,
        1255
      ],
      "op": "DUP3",
      "path": "8"
    },
    "886": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1242,
        1255
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "887": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1256,
        1280
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x67C"
    },
    "890": {
      "fn": "AllowTokens.removeAllowedToken",
      "jump": "i",
      "offset": [
        1256,
        1280
      ],
      "op": "JUMP",
      "path": "8"
    },
    "891": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1256,
        1280
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "892": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1242,
        1281
      ],
      "op": "DUP2",
      "path": "8"
    },
    "893": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1242,
        1281
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "894": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1242,
        1281
      ],
      "op": "DUP2",
      "path": "8"
    },
    "895": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1242,
        1281
      ],
      "op": "LT",
      "path": "8"
    },
    "896": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1242,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x38B"
    },
    "899": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1242,
        1281
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "900": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1242,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x38B"
    },
    "903": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1242,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x635"
    },
    "906": {
      "fn": "AllowTokens.removeAllowedToken",
      "jump": "i",
      "offset": [
        1242,
        1281
      ],
      "op": "JUMP",
      "path": "8"
    },
    "907": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1242,
        1281
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "908": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1242,
        1281
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "910": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1242,
        1281
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "911": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1242,
        1281
      ],
      "op": "DUP3",
      "path": "8"
    },
    "912": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1242,
        1281
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "913": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1242,
        1281
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "915": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1242,
        1281
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "916": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1242,
        1281
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "917": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1242,
        1281
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "918": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1242,
        1281
      ],
      "op": "ADD",
      "path": "8"
    },
    "919": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1242,
        1281
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "920": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1242,
        1281
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "922": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1214,
        1239
      ],
      "op": "DUP1",
      "path": "8"
    },
    "923": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1214,
        1239
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "928": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "930": {
      "op": "SHL"
    },
    "931": {
      "op": "SUB"
    },
    "932": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1242,
        1281
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "933": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1242,
        1281
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "934": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1242,
        1281
      ],
      "op": "AND",
      "path": "8"
    },
    "935": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1242,
        1281
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "936": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1228,
        1238
      ],
      "op": "DUP4",
      "path": "8"
    },
    "937": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1228,
        1238
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "938": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1214,
        1239
      ],
      "op": "DUP2",
      "path": "8"
    },
    "939": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1214,
        1239
      ],
      "op": "LT",
      "path": "8"
    },
    "940": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1214,
        1239
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3B7"
    },
    "943": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1214,
        1239
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "944": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1214,
        1239
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3B7"
    },
    "947": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1214,
        1239
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x635"
    },
    "950": {
      "fn": "AllowTokens.removeAllowedToken",
      "jump": "i",
      "offset": [
        1214,
        1239
      ],
      "op": "JUMP",
      "path": "8"
    },
    "951": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1214,
        1239
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "952": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1214,
        1239
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "953": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1214,
        1239
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "955": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1214,
        1239
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "956": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1214,
        1239
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "958": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1214,
        1239
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "960": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1214,
        1239
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "961": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1214,
        1239
      ],
      "op": "ADD",
      "path": "8"
    },
    "962": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1214,
        1239
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "964": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1214,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x100"
    },
    "967": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1214,
        1281
      ],
      "op": "EXP",
      "path": "8"
    },
    "968": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1214,
        1281
      ],
      "op": "DUP2",
      "path": "8"
    },
    "969": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1214,
        1281
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "970": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1214,
        1281
      ],
      "op": "DUP2",
      "path": "8"
    },
    "971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "975": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "977": {
      "op": "SHL"
    },
    "978": {
      "op": "SUB"
    },
    "979": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1214,
        1281
      ],
      "op": "MUL",
      "path": "8"
    },
    "980": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1214,
        1281
      ],
      "op": "NOT",
      "path": "8"
    },
    "981": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1214,
        1281
      ],
      "op": "AND",
      "path": "8"
    },
    "982": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1214,
        1281
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "983": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1214,
        1281
      ],
      "op": "DUP4",
      "path": "8"
    },
    "984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "988": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "990": {
      "op": "SHL"
    },
    "991": {
      "op": "SUB"
    },
    "992": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1214,
        1281
      ],
      "op": "AND",
      "path": "8"
    },
    "993": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1214,
        1281
      ],
      "op": "MUL",
      "path": "8"
    },
    "994": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1214,
        1281
      ],
      "op": "OR",
      "path": "8"
    },
    "995": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1214,
        1281
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "996": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1214,
        1281
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "997": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1214,
        1281
      ],
      "op": "POP",
      "path": "8"
    },
    "998": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1291,
        1304
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 13,
      "value": "0x1"
    },
    "1000": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1291,
        1310
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1001": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1291,
        1310
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1002": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1291,
        1310
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1003": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1291,
        1310
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3F6"
    },
    "1006": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1291,
        1310
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1007": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1291,
        1310
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3F6"
    },
    "1010": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1291,
        1310
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x693"
    },
    "1013": {
      "fn": "AllowTokens.removeAllowedToken",
      "jump": "i",
      "offset": [
        1291,
        1310
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1014": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1291,
        1310
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1015": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1291,
        1310
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1017": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1291,
        1310
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1018": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1291,
        1310
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1019": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1291,
        1310
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1020": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1291,
        1310
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1022": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1291,
        1310
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1023": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1291,
        1310
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1024": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1291,
        1310
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1025": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1291,
        1310
      ],
      "op": "ADD",
      "path": "8"
    },
    "1026": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1028": {
      "op": "NOT"
    },
    "1029": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1291,
        1310
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1030": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1291,
        1310
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1031": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1291,
        1310
      ],
      "op": "ADD",
      "path": "8"
    },
    "1032": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1291,
        1310
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1033": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1291,
        1310
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1038": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1040": {
      "op": "SHL"
    },
    "1041": {
      "op": "SUB"
    },
    "1042": {
      "op": "NOT"
    },
    "1043": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1291,
        1310
      ],
      "op": "AND",
      "path": "8"
    },
    "1044": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1291,
        1310
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1045": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1291,
        1310
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1046": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1291,
        1310
      ],
      "op": "ADD",
      "path": "8"
    },
    "1047": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1291,
        1310
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1048": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1291,
        1310
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1049": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1325,
        1357
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 14,
      "value": "0x40"
    },
    "1051": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1325,
        1357
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1052": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1325,
        1357
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x564B89698F7ED468CC4FD744742E329FDDD973BA260C976968AEB4ACFE78B733"
    },
    "1085": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1325,
        1357
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1086": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1325,
        1357
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x266"
    },
    "1089": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1325,
        1357
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1090": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1339,
        1349
      ],
      "op": "CALLER",
      "path": "8"
    },
    "1091": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1339,
        1349
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1092": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1351,
        1356
      ],
      "op": "DUP6",
      "path": "8"
    },
    "1093": {
      "fn": "AllowTokens.removeAllowedToken",
      "offset": [
        1351,
        1356
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1098": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1100": {
      "op": "SHL"
    },
    "1101": {
      "op": "SUB"
    },
    "1102": {
      "op": "SWAP3"
    },
    "1103": {
      "op": "DUP4"
    },
    "1104": {
      "op": "AND"
    },
    "1105": {
      "op": "DUP2"
    },
    "1106": {
      "op": "MSTORE"
    },
    "1107": {
      "op": "SWAP2"
    },
    "1108": {
      "op": "AND"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1111": {
      "op": "DUP3"
    },
    "1112": {
      "op": "ADD"
    },
    "1113": {
      "op": "MSTORE"
    },
    "1114": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1116": {
      "op": "ADD"
    },
    "1117": {
      "op": "SWAP1"
    },
    "1118": {
      "op": "JUMP"
    },
    "1119": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1120": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x467"
    },
    "1123": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x542"
    },
    "1126": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1127": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1132": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1134": {
      "op": "SHL"
    },
    "1135": {
      "op": "SUB"
    },
    "1136": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 15
    },
    "1137": {
      "branch": 29,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "AND",
      "path": "0"
    },
    "1138": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4CC"
    },
    "1141": {
      "branch": 29,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1142": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1144": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1145": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1149": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1151": {
      "op": "SHL"
    },
    "1152": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1153": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1154": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1156": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1158": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1159": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "ADD",
      "path": "0"
    },
    "1160": {
      "op": "MSTORE"
    },
    "1161": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1163": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1165": {
      "op": "DUP3"
    },
    "1166": {
      "op": "ADD"
    },
    "1167": {
      "op": "MSTORE"
    },
    "1168": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "1201": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1203": {
      "op": "DUP3"
    },
    "1204": {
      "op": "ADD"
    },
    "1205": {
      "op": "MSTORE"
    },
    "1206": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1215": {
      "op": "SHL"
    },
    "1216": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1218": {
      "op": "DUP3"
    },
    "1219": {
      "op": "ADD"
    },
    "1220": {
      "op": "MSTORE"
    },
    "1221": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1223": {
      "op": "ADD"
    },
    "1224": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DD"
    },
    "1227": {
      "op": "JUMP"
    },
    "1228": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1229": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2272
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 16,
      "value": "0x4D5"
    },
    "1232": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2263,
        2271
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1233": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2262
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x59C"
    },
    "1236": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2244,
        2272
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1237": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2272
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1238": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "POP",
      "path": "0"
    },
    "1239": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1240": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1370,
        1633
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1241": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1439,
        1443
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1243": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1439,
        1443
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1244": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1455,
        1605
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1245": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1479,
        1492
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "1247": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1479,
        1499
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1248": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1475,
        1499
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1249": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1475,
        1499
      ],
      "op": "LT",
      "path": "8"
    },
    "1250": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1455,
        1605
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1251": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1455,
        1605
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x539"
    },
    "1254": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1455,
        1605
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1255": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1544,
        1549
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1260": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1262": {
      "op": "SHL"
    },
    "1263": {
      "op": "SUB"
    },
    "1264": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1524,
        1549
      ],
      "op": "AND",
      "path": "8"
    },
    "1265": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1524,
        1537
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "1267": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1538,
        1539
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1268": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1524,
        1540
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1269": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1524,
        1540
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1270": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1524,
        1540
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1271": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1524,
        1540
      ],
      "op": "LT",
      "path": "8"
    },
    "1272": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1524,
        1540
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x503"
    },
    "1275": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1524,
        1540
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1276": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1524,
        1540
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x503"
    },
    "1279": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1524,
        1540
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x635"
    },
    "1282": {
      "fn": "AllowTokens.isTokenAllowed",
      "jump": "i",
      "offset": [
        1524,
        1540
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1283": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1524,
        1540
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1284": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1524,
        1540
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1286": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1524,
        1540
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1287": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1524,
        1540
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1288": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1524,
        1540
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1289": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1524,
        1540
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1291": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1524,
        1540
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1292": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1524,
        1540
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1293": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1524,
        1540
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "1294": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1524,
        1540
      ],
      "op": "ADD",
      "path": "8"
    },
    "1295": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1524,
        1540
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1302": {
      "op": "SHL"
    },
    "1303": {
      "op": "SUB"
    },
    "1304": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1524,
        1540
      ],
      "op": "AND",
      "path": "8"
    },
    "1305": {
      "branch": 28,
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1524,
        1549
      ],
      "op": "EQ",
      "path": "8"
    },
    "1306": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1520,
        1595
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1307": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1520,
        1595
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x527"
    },
    "1310": {
      "branch": 28,
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1520,
        1595
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1311": {
      "op": "POP"
    },
    "1312": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1576,
        1580
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 17,
      "value": "0x1"
    },
    "1314": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1576,
        1580
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1315": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1370,
        1633
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1316": {
      "op": "POP"
    },
    "1317": {
      "op": "POP"
    },
    "1318": {
      "fn": "AllowTokens.isTokenAllowed",
      "jump": "o",
      "offset": [
        1370,
        1633
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1319": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1520,
        1595
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1320": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1501,
        1504
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 18
    },
    "1321": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1501,
        1504
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x531"
    },
    "1324": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1501,
        1504
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1325": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1501,
        1504
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x661"
    },
    "1328": {
      "fn": "AllowTokens.isTokenAllowed",
      "jump": "i",
      "offset": [
        1501,
        1504
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1329": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1501,
        1504
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1330": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1501,
        1504
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1331": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1501,
        1504
      ],
      "op": "POP",
      "path": "8"
    },
    "1332": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1501,
        1504
      ],
      "op": "POP",
      "path": "8"
    },
    "1333": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1455,
        1605
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4DC"
    },
    "1336": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1455,
        1605
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1337": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1455,
        1605
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1338": {
      "op": "POP"
    },
    "1339": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1621,
        1626
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 19,
      "value": "0x0"
    },
    "1341": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1621,
        1626
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "1342": {
      "fn": "AllowTokens.isTokenAllowed",
      "offset": [
        1370,
        1633
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1343": {
      "op": "POP"
    },
    "1344": {
      "op": "POP"
    },
    "1345": {
      "fn": "AllowTokens.isTokenAllowed",
      "jump": "o",
      "offset": [
        1370,
        1633
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1346": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1359,
        1489
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1347": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1349": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1354": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1356": {
      "op": "SHL"
    },
    "1357": {
      "op": "SUB"
    },
    "1358": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "1359": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 20
    },
    "1360": {
      "branch": 30,
      "fn": "Ownable._checkOwner",
      "offset": [
        1422,
        1445
      ],
      "op": "EQ",
      "path": "0",
      "statement": 21
    },
    "1361": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AE"
    },
    "1364": {
      "branch": 30,
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1365": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1367": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1368": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1374": {
      "op": "SHL"
    },
    "1375": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1376": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1377": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1379": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1381": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1382": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "ADD",
      "path": "0"
    },
    "1383": {
      "op": "DUP2"
    },
    "1384": {
      "op": "SWAP1"
    },
    "1385": {
      "op": "MSTORE"
    },
    "1386": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1388": {
      "op": "DUP3"
    },
    "1389": {
      "op": "ADD"
    },
    "1390": {
      "op": "MSTORE"
    },
    "1391": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1426": {
      "op": "DUP3"
    },
    "1427": {
      "op": "ADD"
    },
    "1428": {
      "op": "MSTORE"
    },
    "1429": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1431": {
      "op": "ADD"
    },
    "1432": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DD"
    },
    "1435": {
      "op": "JUMP"
    },
    "1436": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1437": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1439": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1440": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1445": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1447": {
      "op": "SHL"
    },
    "1448": {
      "op": "SUB"
    },
    "1449": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 22
    },
    "1450": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1451": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "1452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1458": {
      "op": "SHL"
    },
    "1459": {
      "op": "SUB"
    },
    "1460": {
      "op": "NOT"
    },
    "1461": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1462": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "1463": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1464": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "OR",
      "path": "0"
    },
    "1465": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1466": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1467": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 23,
      "value": "0x40"
    },
    "1469": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1470": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1471": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1472": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1473": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "AND",
      "path": "0"
    },
    "1474": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1475": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1476": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1477": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1510": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1511": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1512": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1513": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2496,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "1514": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "1515": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1516": {
      "op": "JUMPDEST"
    },
    "1517": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1519": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1521": {
      "op": "DUP3"
    },
    "1522": {
      "op": "DUP5"
    },
    "1523": {
      "op": "SUB"
    },
    "1524": {
      "op": "SLT"
    },
    "1525": {
      "op": "ISZERO"
    },
    "1526": {
      "op": "PUSH2",
      "value": "0x5FE"
    },
    "1529": {
      "op": "JUMPI"
    },
    "1530": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1532": {
      "op": "DUP1"
    },
    "1533": {
      "op": "REVERT"
    },
    "1534": {
      "op": "JUMPDEST"
    },
    "1535": {
      "op": "DUP2"
    },
    "1536": {
      "op": "CALLDATALOAD"
    },
    "1537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1541": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1543": {
      "op": "SHL"
    },
    "1544": {
      "op": "SUB"
    },
    "1545": {
      "op": "DUP2"
    },
    "1546": {
      "op": "AND"
    },
    "1547": {
      "op": "DUP2"
    },
    "1548": {
      "op": "EQ"
    },
    "1549": {
      "op": "PUSH2",
      "value": "0x615"
    },
    "1552": {
      "op": "JUMPI"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1555": {
      "op": "DUP1"
    },
    "1556": {
      "op": "REVERT"
    },
    "1557": {
      "op": "JUMPDEST"
    },
    "1558": {
      "op": "SWAP4"
    },
    "1559": {
      "op": "SWAP3"
    },
    "1560": {
      "op": "POP"
    },
    "1561": {
      "op": "POP"
    },
    "1562": {
      "op": "POP"
    },
    "1563": {
      "jump": "o",
      "op": "JUMP"
    },
    "1564": {
      "op": "JUMPDEST"
    },
    "1565": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1567": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1569": {
      "op": "DUP3"
    },
    "1570": {
      "op": "DUP5"
    },
    "1571": {
      "op": "SUB"
    },
    "1572": {
      "op": "SLT"
    },
    "1573": {
      "op": "ISZERO"
    },
    "1574": {
      "op": "PUSH2",
      "value": "0x62E"
    },
    "1577": {
      "op": "JUMPI"
    },
    "1578": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1580": {
      "op": "DUP1"
    },
    "1581": {
      "op": "REVERT"
    },
    "1582": {
      "op": "JUMPDEST"
    },
    "1583": {
      "op": "POP"
    },
    "1584": {
      "op": "CALLDATALOAD"
    },
    "1585": {
      "op": "SWAP2"
    },
    "1586": {
      "op": "SWAP1"
    },
    "1587": {
      "op": "POP"
    },
    "1588": {
      "jump": "o",
      "op": "JUMP"
    },
    "1589": {
      "op": "JUMPDEST"
    },
    "1590": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1595": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1597": {
      "op": "SHL"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1600": {
      "op": "MSTORE"
    },
    "1601": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "1603": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1605": {
      "op": "MSTORE"
    },
    "1606": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1608": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1610": {
      "op": "REVERT"
    },
    "1611": {
      "op": "JUMPDEST"
    },
    "1612": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1617": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1619": {
      "op": "SHL"
    },
    "1620": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1622": {
      "op": "MSTORE"
    },
    "1623": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1625": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1627": {
      "op": "MSTORE"
    },
    "1628": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1632": {
      "op": "REVERT"
    },
    "1633": {
      "op": "JUMPDEST"
    },
    "1634": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1636": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1638": {
      "op": "NOT"
    },
    "1639": {
      "op": "DUP3"
    },
    "1640": {
      "op": "EQ"
    },
    "1641": {
      "op": "ISZERO"
    },
    "1642": {
      "op": "PUSH2",
      "value": "0x675"
    },
    "1645": {
      "op": "JUMPI"
    },
    "1646": {
      "op": "PUSH2",
      "value": "0x675"
    },
    "1649": {
      "op": "PUSH2",
      "value": "0x64B"
    },
    "1652": {
      "jump": "i",
      "op": "JUMP"
    },
    "1653": {
      "op": "JUMPDEST"
    },
    "1654": {
      "op": "POP"
    },
    "1655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1657": {
      "op": "ADD"
    },
    "1658": {
      "op": "SWAP1"
    },
    "1659": {
      "jump": "o",
      "op": "JUMP"
    },
    "1660": {
      "op": "JUMPDEST"
    },
    "1661": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1663": {
      "op": "DUP3"
    },
    "1664": {
      "op": "DUP3"
    },
    "1665": {
      "op": "LT"
    },
    "1666": {
      "op": "ISZERO"
    },
    "1667": {
      "op": "PUSH2",
      "value": "0x68E"
    },
    "1670": {
      "op": "JUMPI"
    },
    "1671": {
      "op": "PUSH2",
      "value": "0x68E"
    },
    "1674": {
      "op": "PUSH2",
      "value": "0x64B"
    },
    "1677": {
      "jump": "i",
      "op": "JUMP"
    },
    "1678": {
      "op": "JUMPDEST"
    },
    "1679": {
      "op": "POP"
    },
    "1680": {
      "op": "SUB"
    },
    "1681": {
      "op": "SWAP1"
    },
    "1682": {
      "jump": "o",
      "op": "JUMP"
    },
    "1683": {
      "op": "JUMPDEST"
    },
    "1684": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1689": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1691": {
      "op": "SHL"
    },
    "1692": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1694": {
      "op": "MSTORE"
    },
    "1695": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1699": {
      "op": "MSTORE"
    },
    "1700": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1702": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1704": {
      "op": "REVERT"
    }
  },
  "sha1": "fa7a7626ef94d23e1228335965bce2494bb1b8f9",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./interfaces/IAllowTokens.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract AllowTokens is IAllowTokens, Ownable {\n    address[] public allowedTokens;\n\n    event AllowToken(address admin, address token);\n    event DisallowToken(address admin, address token);\n\n    function addAllowedToken(address token) public override onlyOwner {\n        bool exists = false;\n        for (uint256 i = 0; i < allowedTokens.length; i++) {\n            if (allowedTokens[i] == token) {\n                exists = true;\n                break;\n            }\n        }\n        require(!exists, \"The token is already allowed\");\n\n        allowedTokens.push(token);\n        emit AllowToken(msg.sender, token);\n    }\n\n    function removeAllowedToken(address token) public override onlyOwner {\n        uint256 tokenIndex = allowedTokens.length;\n        for (uint256 i = 0; i < allowedTokens.length; i++) {\n            if (allowedTokens[i] == token) {\n                tokenIndex = i;\n                break;\n            }\n        }\n        require(\n            tokenIndex < allowedTokens.length,\n            \"The token is already unallowed\"\n        );\n\n        allowedTokens[tokenIndex] = allowedTokens[allowedTokens.length - 1];\n        allowedTokens.pop();\n        emit DisallowToken(msg.sender, token);\n    }\n\n    function isTokenAllowed(address token) public view override returns (bool) {\n        for (uint256 i = 0; i < allowedTokens.length; i++) {\n            if (allowedTokens[i] == token) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n",
  "sourceMap": "151:1484:8:-:0;;;;;;;;;;;;-1:-1:-1;936:32:0;719:10:4;936:18:0;:32::i;:::-;151:1484:8;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;151:1484:8:-;;;;;;;",
  "sourcePath": "contracts/AllowTokens.sol",
  "type": "contract"
}